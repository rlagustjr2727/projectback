spring.application.name=Project
# WebApplication Type Setting : 스프링 MVC 기반으로 웹 애플리케이션 구동
spring.main.web-application-type=servlet

# 톰캣 서버 포트 변경
server.port=8080

# DB 셋팅
# DataSource setting
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=soct1
#spring.datasource.password=tiger
#
#
## JPA setting
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=false
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
#spring.jpa.properties.hibernate.format_sql=true

# MySQL 설정
#spring.datasource.url=jdbc:mysql://localhost:33006/mysql?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.datasource.username=jieun
#spring.datasource.password=jieun1234
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.datasource.initialization-mode=always
#spring.datasource.data=classpath:data.sql

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://220.86.29.33:33006/custom?serverTimezone=UTC&characterEncoding=UTF-8
#spring.datasource.username=jieun
#spring.datasource.password=jieun1234
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# 오라클 설정
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/xe
spring.datasource.driverClassName=oracle.jdbc.OracleDriver
spring.datasource.username=soct1
spring.datasource.password=tiger
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
spring.datasource.initialization-mode=always
spring.datasource.data=classpath:data.sql

# Spring Security 자동 구성 제외 (자동 구성이 있다면)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

#spring.main.allow-bean-definition-overriding=true

# 업로드된 파일을 제공할 경로 설정
spring.web.resources.static-locations=file:./uploads/

# 최대 파일 크기 설정 (여기서는 10MB로 설정)
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# 이미지 파일의 경로를 설정하고, 클라이언트 측에서 접근할 수 있도록 정적 리소스를 설정
spring.mvc.static-path-pattern=/uploads/**

# 네이버 api
naver.client.id=UEr1xYASYxYn07eTwsRA
naver.client.secret=X_oTh5yEqM

